xfreerdp /u:student /v:10.50.32.144 -dynamic-resolution +glyph-cache +clipboard

links 
  when to quote in powershell simple-talk
  microsoft about_hash_tables(microsoft powershell website)
  tutorialspoint.com/powershell/powershell_brackets.htm



verb-noun

get-command -verb get -- shows get commands
get-command -noun process -- shows commands with process
get-proccess -- shows prcesses
get-help verb-noun (-examples) -- gets help for specified command (example shows an example within help page)
                    -full -- shows full help page
  get-help *log* -- shows logs of commands
  get-help *event*
  get-help get-process *online* -- pulls up webpage of command
  get-childitem -path c:\windows -filter *.exe -recurse -name --  looks for executables
  get-alias -definition get-childitem -- looks for alias associated with get-childitem
  set-alias edit notepad.exe -- typing edit will open notepad
  remove-item alias:edit -- removes the edit alias
  (get-process).processname --  shows process list by names
  get-process notepad -- shows only the notepad process
  (get-process notepad).kill() -- kills notepad process
  get-process | get-member -- members of get process
  get-process | get-member -membertype properties -- properties of get-process

shows running services
  get-service | where-object {$_.status -eq "running"}
  shows stopped service
  return get-service | where-object -property status -eq 'stopped'

function fruit-host {
  write-host "Apple"
  write-host "Orange"
  write-host "Banana"
  write-host "Pear"
  }

function fruit-output {
  write-output "Apple"
  write-output "Orange"
  write-output "Banana"
  write-output "Pear"
  }

fruit-host | sort -- will not sort with -host
fruit-output | sort -- will sort with -output -- sends data down the line 

both of these print 10
  $x = 10
  get-variable x
  get-childitem variable:x

declare multiple variables
  $x, $y, $z = "1", "2", "3"

see if it exists
  test-path variable:x 

remove variables
  remove-variable x
  del variable:x

single quotes -- are literal
double quotes -- allows variables within string

reverse array
  $revarray = -3..15
  $reverse = $revarray[($revarray.length-1)..0]
  $reverse

  $revarray = -3..15
  [array]::reverse($revarray)

Hash tables
  $employee1 = [ordered]@{}
  $employee2 = [ordered]@{}
  
  $employee1.first = "Mary"
  $employee1["last"] = "Hopper"
  $employee1.ID = "001"
  $employee1["job"] = "Software Developer"

  $employee1

  $employee2.first = "John"
  $employee2["last"] = "Williams"
  $employee2.ID = "002"
  $employee2["job"] = "Web Developer"

  $employee2
  $employee1.Username = "mhopper001"
  $employee2.Username = "jwilliams002"
  
  $employee3 = [ordered]@{}
  $employee3.first = "bob"
  $employee3.last = "marley"
  $employee3.id = "20"
  $employee3.username = "bmarley24"
  $employee3.job = "accountant"

idk wat this is

foreach ($grp in (Get-LocalGroup).name){
    write-host "`n$grp" -ForegroundColor magenta -BackgroundColor black
    '========================================='
    (Get-LocalGroupMember -Name $grp).name -replace("$env:computername\\",'')
}
















